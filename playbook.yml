- hosts: all
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - python3-pip
        state: present
        update_cache: yes

         - name: Ensure curl and gpg are installed
      apt:
        name:
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Check if Docker GPG key exists
      stat:
        path: /tmp/docker.gpg
      register: docker_gpg_stat

    - name: Debug docker_gpg_stat
      debug:
        var: docker_gpg_stat

    - name: Add Docker GPG key (as root)
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      when: docker_gpg_stat.stat.exists == false   

   # - name: Install Docker and Start Service
   #   block:
   #     - name: Add Docker GPG key
   #      shell: |
   #         install -m 0755 -d /etc/apt/keyrings
    #        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    #        chmod a+r /etc/apt/keyrings/docker.gpg

        - name: Add Docker repository
          shell: |
            echo \
            "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu noble stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null

        - name: Install Docker CE
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            update_cache: yes
            state: present

        - name: Start Docker service
          systemd:
            name: docker
            state: started
            enabled: yes

    - name: Add azureuser to Docker group
      user:
        name: azureuser
        groups: docker
        append: yes

    - name: Create directory for app files
      file:
        path: /home/azureuser/hello-world-app/
        state: directory

    - name: Copy application files (Dockerfile + index.html) to server
      copy:
        src: ./  # Only copy app folder, not whole repo
        dest: /home/azureuser/hello-world-app/

    - name: Build Docker image
      community.docker.docker_image:
        name: hello-world-app
        build:
          path: /home/azureuser/hello-world-app/
        source: build

    - name: Run Docker container
      community.docker.docker_container:
        name: hello-world-app
        image: hello-world-app
        state: started
        restart_policy: always
        ports:
          - "80:80"
